@model Model.Models.Caste
@using Components.Logging

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>



@using (Html.BeginForm("Post", "Caste", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CasteId)
    @Html.HiddenFor(m => m.DocTypeId)

    <div class="panel panel-default">
        <div class="panel-heading">
            @CustomHelpers.RenderResHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, "Caste")
            @*@if (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <button type="submit" name="Command:Submit" class="btn btn-primary right" id="SubmitContinue" style="margin-left:5px;">Submit & Next<span class='badge'>@(ViewBag.PendingToSubmit != 0 ? ViewBag.PendingToSubmit : "")</span></button>
                <button type="submit" name="Command:Submit" class="btn btn-primary right">Submit</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
            </h3>}
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Review @ViewBag.Name</span>
                <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
                <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "detail")
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                </h3>
            }
            else
            {
                <h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@
            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />
            @{
                string EditAction = "";
                EditAction = "Modify";

            }
            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    
                    @Html.ActionLink(" ", "GetHistory", "LogHistory", new { Ids = Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip", @id = "DocHistory", @data_modal = "" })
                   

                    @Html.ActionLink(" ", "Email", "Caste", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    

                    
                    @Html.ActionLink(" ", "Report", "Caste", null, new { @class = "glyphicon glyphicon-th toolbar right", @title = "Report", @data_toggle = "tooltip" })
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "Caste", null, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip", target = "_blank" })
                    @Html.ActionLink(" ", EditAction, "Caste", new { @id = Model.CasteId }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
                    @*@Html.ActionLink(" ", "GeneratePrints", "Caste", null, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })*@
                    @Html.ActionLink(" ", "PrevPage", "Caste", new { DocId = @Model.CasteId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "Caste", new { DocId = @Model.CasteId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "Caste", new { id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.CasteId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        @*<li><a href="@Url.Action("Email", "Caste")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>*@
                        <li role="separator" class="divider"></li>
                        <li><a href="@Url.Action("Report", "Caste")"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                @Html.ValidationSummary(true)
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Caste Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.CasteName, "Caste", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.CasteName, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.CasteName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row"></div>
        </div>
    </div>
}


@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{

    <script type="text/javascript">

        //Reloading the table contents on modal hide
        //$('#myModal').on('hidden.bs.modal', function () {
        //    window.location.reload();
        //});



        //For Populating Modal PopUp on DoubleClick Of Row
        $('#gbody').on("dblclick",'.grid-body',function(){
            var editurl=$(this).find('a[edit]').attr('href');
            $('#myModalContent').load(editurl, function () {
                //alert('2');
                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);
            });
        });


        //For Handling Modal PopUp on Clicking Delete Icon
        $('#gbody').on("click",'a[delete]', function (e) {
            $('#myModalContent').load(this.href, function () {
                //alert('2');
                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);
            });
            return false;
        });

        //For Handling Modal PopUp on Clicking Delete Icon
        $('#gbody').on("click",'a[Detail]', function (e) {
            $('#myModalContent').load(this.href, function (response, status, xhr) {
                //alert('2');
                if ( status == "error" ) {
                    var msg = "Sorry but there was an error: ";
                }
                else
                {
                    $('#myModal').modal({
                        backdrop: 'static',
                        keyboard: true
                    }, 'show');

                    bindForm1(this);}
            });
            return false;
        });




        var id=@Model.CasteId;



        var IsSaved=false;
        var ValidationCount=0;

        $('form').submit(function(event){

            if(!IsSaved)
            {
                //if(!ValidateData() || !ValidateCostCenter())
                if(!ValidateData())
                {
                    return false;
                }
                IsSaved=true;
                return IsSaved;
            }
            else
            {
                return false;
            }


        });


        function ValidateData() {
            var DocId=@Model.CasteId;
            var TempValue;
            var ValidationMessage="";



            //Checking for dulicate key value
            if(DocId<=0)
            {
                TempValue= $('#CasteName').DuplicateCheckForCreate({value: $('#CasteName').val(), doctype: 0, url:'/Caste/DuplicateCheckForCreate/' });
                if (TempValue){ ValidationMessage=$('#CasteName').val() + " already exist <br />";}
            }
            else
            {
                TempValue = $('#CasteName').DuplicateCheckForEdit({ value: $('#CasteName').val(), doctype: 0, headerId:DocId, url: '/Caste/DuplicateCheckForEdit/' });
                if (TempValue) {ValidationMessage+=$('#CasteName').val() + " already exist <br />";}
            }


            

                



            if(TempValue)
            {
                if($('#validationerrormsg').length==0){
                    $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
                else
                {
                    $('#validationerrormsg').html(ValidationMessage);
                }
            }

            return  (ValidationMessage=="");
        }




    </script>

}


<script type="text/javascript">


    $(document).ready(function () {
        var id=@Model.CasteId;
        if(id==null||id==0)
        {
            $(document).find('a#btnCreateF').removeAttr('href').removeAttr('data-modal');
            $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
            $(document).find('a#btnCreatePO').removeAttr('href').removeAttr('data-modal');
        }

        $(document).ajaxStart(function () {
            if ($(':submit', 'div.modal-content').length)
                $(':submit', 'div.modal-content').attr("disabled", 'disabled');
            return;
        });

        $(document).ajaxStop(function () {
            if ($(':submit', 'div.modal-content').length)
                $(':submit', 'div.modal-content').removeAttr("disabled");
            return;
        });

        //$("#StartDateTimeHour,#StartDateTimeMinute,#CompletedDateTimeHour,#CompletedDateTimeMinute").keyup(ShowTimeValidation);


       
        //function ShowTimeValidation()
        //{
        //    if ($('#StartDateTimeHour').val() > 24)
        //    {
        //        $('#StartDateTimeHourValidation').text("Hour Value can not be greater then 24.");
        //        $('#StartDateTimeHour').val(0);
        //    }
        //    else{
        //        $('#StartDateTimeHourValidation').text("");
        //    }

        //    if ($('#StartDateTimeMinute').val() > 59)
        //    {
        //        $('#StartDateTimeMinuteValidation').text("Minute Value can not be greater then 59.");
        //        $('#StartDateTimeMinute').val(0);
        //    }
        //    else{
        //        $('#StartDateTimeMinuteValidation').text("");
        //    }

        //    if ($('#CompletedDateTimeHour').val() > 24)
        //    {
        //        $('#CompletedDateTimeHourValidation').text("Hour Value can not be greater then 24.");
        //        $('#CompletedDateTimeHour').val(0);
        //    }
        //    else{
        //        $('#CompletedDateTimeHourValidation').text("");
        //    }

        //    if ($('#CompletedDateTimeMinute').val() > 59)
        //    {
        //        $('#CompletedDateTimeMinuteValidation').text("Minute Value can not be greater then 59.");
        //        $('#CompletedDateTimeMinute').val(0);
        //    }
        //    else{
        //        $('#CompletedDateTimeMinuteValidation').text("");
        //    }
        //}


        $("#CasteName").focus();

        //Calling the function to load the table data/ Line information

        //Adding Hidden Input Fields
        AddFields();




    });








    


</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

        RemoveFields();

        function RemoveFields(){
            //Disabling input fields
            $(':input:not(:submit,#IsContinue)').attr('disabled','disabled');

            //Removing all the events from the newly created lines
            $('#gbody').unbind();

            //Removing Add New Row ActionLink
            if($('a#btnCreate').length)
                $('a#btnCreate').parents('h5')[0].remove();
            if($('a#btnCreatePO').length)
                $('a#btnCreatePO').parents('h5')[0].remove();
            //Preventing the click event on newly created elements
            $(document).on('click','#gbody a[edit],#gbody a[delete],#gbodyconsumption a',function(event){
                event.preventDefault();
            })
            //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
            $('form:last').prop('action','');
        }


    </script>
}
