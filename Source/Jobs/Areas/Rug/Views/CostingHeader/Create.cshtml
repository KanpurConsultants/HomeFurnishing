@model Model.ViewModels.CostingHeaderIndexViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("HeaderPost", "CostingHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.CostingHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @Html.HiddenFor(m => m.CreatedDate)

    <div class="panel panel-default">
        <div class="panel-heading">

            @CustomHelpers.RenderResHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)


            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />

            @{
                string EditAction = "";
                if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                {
                    EditAction = "Modify";
                }
                else if ((Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified))
                {
                    EditAction = "ModifyAfter_Submit";
                }
                else
                {
                    EditAction = "DetailInformation";
                }
            }

            <div class="panel-info">
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "CostingHeader", new { @id = @ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus", @title = "Add New", @data_toggle = "tooltip" })
                    @if (Model.CostingHeaderId > 0)
                    {
                        @Html.ActionLink(" ", EditAction, "CostingHeader", new { @id = Model.CostingHeaderId, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
                    }
                    @if (Model.CostingHeaderId > 0)
                    {
                        @Html.ActionLink(" ", "GeneratePrints", "CostingHeader", new { Ids = Model.CostingHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-print", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    }
                    @Html.ActionLink(" ", "PrevPage", "CostingHeader", new { DocId = @Model.CostingHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "CostingHeader", new { DocId = @Model.CostingHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "CostingHeader", new { id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" title="More Option" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                        @if (Model.CostingHeaderId > 0)
                        {
                            <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.CostingHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        }
                        <li><a href="@Url.Action("Email", "CostingHeader")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a target="_blank" href="@Url.Action("GeneratePrintMix", "CostingHeader", new { Ids = Model.CostingHeaderId })"><span class="glyphicon glyphicon-print"> </span> Mix Print</a></li>
                        <li><a target="_blank" href="@Url.Action("Report", "CostingHeader", new { @ViewBag.id })"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
                    </ul>
                </div>

            </div>
        </div>

        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Costing Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Costing Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new
                                   {
                                       @class = "datepickerWithNFD form-control col-xs-6 required updateDocNo",
                                       data_tabl = "CostingHeaders",
                                       data_doctype = Model.DocTypeId,
                                       data_divId = Model.DivisionId,
                                       data_sitId = Model.SiteId,
                                   })
                                        @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Costing No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control required" })
                                        @Html.ValidationMessageFor(m => m.DocNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PersonId, "Person", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.PersonId, new { @class = "form-control required" })
                                        @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

















                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextAreaFor(m => m.Remark, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>



                        </div>

                    </div>
                </div>

                


                <hr />

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        3.Products
                    </h4>
                </div>

                <div class="panel-info" style="height:40px">
                    <div class="btn-group" style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @{string Action = "";
                            if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                            { Action = "CreateLine"; }
                            else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified)
                            { Action = "CreateLineAfter_Submit"; }
                        }

                        @Html.ActionLink("Add New Row ", Action, "CostingLine", new { id = @Model.CostingHeaderId, IsProdBased = false }, new { data_modal = "", id = "btnCreatePO", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip", @data_detailDisabled = "true" })
                    </div>
                </div>


                <div style="padding-right:15px;">

                    <div class="panel panel-default" id="grid">

                        <div style="min-width: 700px;">

                            <div class="panel-info" id="gbody">

                            </div>
                        </div>
                    </div>


                    <div class="panel panel-default" id="gridcharges">

                    </div>
                </div>







            </div>
        </div>
    </div>
                            }


@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{

    <script type="text/javascript">

        $('#JobWorkerId').change(function () {

            var cid = $("#JobWorkerId").val();
            var cdata = $('#JobWorkerId').select2('data').text;
            $("#BillToPartyId").select2('data', { id: cid, text: cdata });
        });

        //Reloading the table contents on modal hide
        $('#myModal').on('hidden.bs.modal', function () {
            LoadProducts();
            var id='@Model.CostingHeaderId';
        });

        $(document).ready(function(){
            enableModalTransitions();
        })





        var IsSaved=false;
        var ValidationCount=0;


        $('form').submit(function(event){

            if(!IsSaved)
            {
                //if(!ValidateData() || !ValidateCostCenter())
                if(!ValidateData())
                {
                    return false;
                }
                IsSaved=true;
                return IsSaved;
            }
            else
            {
                return false;
            }


        });

        var id=@Model.CostingHeaderId;

        if(id>0)
        {
            $('#ProcessId').attr('readonly','true');
        }


        function ValidateData() {
            var DocId=@Model.CostingHeaderId;
            var TempValue;
            var ValidationMessage="";



            //Checking for dulicate key value
            if(DocId<=0)
            {
                TempValue= $('#DocNo').DuplicateCheckForCreate({ name: 'Costings', value: $('#DocNo').val(), doctype: $('#DocTypeId').val() });
                if (TempValue){ ValidationMessage=$('#DocNo').val() + " already exist <br />";}
            }
            else
            {
                TempValue = $('#DocNo').DuplicateCheckForEdit({ name: 'Costings', value: $('#DocNo').val(), doctype: $('#DocTypeId').val(),headerId:DocId });
                if (TempValue) {ValidationMessage+=$('#DocNo').val() + " already exist <br />";}
            }
            if(TempValue)
            {
                if($('#validationerrormsg').length==0){
                    $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
                else
                {
                    $('#validationerrormsg').html(ValidationMessage);
                }
            }

            return  (ValidationMessage=="");

        }


        $('#CostCenterName').change(function(){
            var disv=$(this);
            if( $('#JobWorkerId').val() && $('#JobWorkerId').val() > 0 && ValidateCostCenter(disv) )
            {

            }
            else
            {

            }
        })

        function ValidateCostCenter(thisv) {
            var DocId=@Model.CostingHeaderId;
            var TempValue;
            var ValidationMessage="";

            //if(CostCenterUnique=="True")
            //{


            $.ajax({
                url:'/CostingHeader/ValidateCostCenter',
                data:{DocTypeId:$('#DocTypeId').val(),CostCenterName:thisv.val(),HeaderId:$('#CostingHeaderId').val(),JobWorkerId:$('#JobWorkerId').val()},
                async:false,
                success:function(data)
                {
                    ValidationMessage=data;
                }
            });

            if(ValidationMessage)
            {
                if($('#csvalidationerrormsg').length==0){
                    $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="csvalidationerrormsg">'+ValidationMessage+'</div>');}
                else
                {
                    $('#csvalidationerrormsg').html(ValidationMessage);
                }
            }
            else
            {
                $('#csvalidationerrormsg').remove();
            }

            return  (ValidationMessage=="");

        }


    </script>

}


<script type="text/javascript">


    $(document).ready(function () {
        var id=@Model.CostingHeaderId;
        if(id==null||id==0)
        {
            $(document).find('a#btnCreateF').removeAttr('href').removeAttr('data-modal');
            $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
            $(document).find('a#btnCreatePO').removeAttr('href').removeAttr('data-modal');
        }

        $(document).ajaxStart(function () {
            if ($(':submit', 'div.modal-content').length)
                $(':submit', 'div.modal-content').attr("disabled", 'disabled');
            return;
        });

        $(document).ajaxStop(function () {
            if ($(':submit', 'div.modal-content').length)
                $(':submit', 'div.modal-content').removeAttr("disabled");
            return;
        });



        CustomSelectFunction($("#PersonId"), '/CostingHeader/GetCustomPerson', '/ComboHelpList/SetSinglePerson', ' ', false, 0,$('#DocTypeId').val());



        //Calling the function to load the table data/ Line information
        LoadProducts();

        //Adding Hidden Input Fields
        AddFields();



        var id=@Model.CostingHeaderId;

    });







    function LoadProducts() {

        var groupId=@Model.CostingHeaderId;
        var status='@Model.Status';

        var link="/Rug/CostingLine/_Index/";

        $.ajax({
            url: link,
            type: "GET",
            data:{id:groupId,status:status},
            success: function (data) {
                $("#gbody").html(data);
            },
            error: function (result) {
                alert("Error");
            }
        });
    };









</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            DisablePageNavigation();
        })

    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
                && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">


        var TrancType='@ViewBag.transactionType'

        $(document).ready(function(){
            enableActivityLogReason(GatePassGen,GatePassId,TrancType);
        })




    </script>
}



@if (ViewBag.transactionType != null && (ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            CreateTrasitionEffect();
        })

    </script>
}