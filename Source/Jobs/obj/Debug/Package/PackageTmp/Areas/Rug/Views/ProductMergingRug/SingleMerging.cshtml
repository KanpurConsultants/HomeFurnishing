@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@ViewBag.ProductTypeId


@using (Html.BeginForm("SingleMergingPost", "ProductMergingRug", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <input type="hidden" name="id" value="@ViewBag.id" />
    
    
    <div class="panel panel-default">
        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-export black"></span>Product Merging</span>
              
            </h3>

            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Import", "ProductMergingRug", null, new { @class = "glyphicon glyphicon-import toolbar right", @title = "Import", @data_toggle = "tooltip" })
                </h4>
            </div>

        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">

                
                <h4 class="black"></h4><p>
                    <table class="table table-responsive table-hover" style="max-width:60%">
                        <tr style="border-bottom:thin solid #dbd1d1" >
                            <td>
                                Main Product
                            </td>
                            <td colspan="2">
                                <input class="form-control required" data-val="true" id="MainProductId" name="MainProductId" type="text">
                            </td>
                        </tr>

                        <tr style="border-bottom:thin solid #dbd1d1">
                            <td>
                                Merging Product
                            </td>
                            <td colspan="2">
                                <input class="form-control required" data-val="true" id="MergingProductId" name="MergingProductId" type="text">
                            </td>
                        </tr>
                    </table>
                </p>

                <div class="form-group">
                    @*@Html.Label("", "Select File", new { @class = "control-label file-input-button" })*@
                    <div class="col-md-10">
                        <div class="row">
                            <div class="col-md-8">
                                <input type="submit" value="Upload" class="btn btn-primary fileinput-button" id="submit" style="width: 90px; background-color: #2980b9" />
                            </div>
                        </div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    CustomSelectFunction($("#MainProductId"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
    CustomSelectFunction($("#MergingProductId"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
 </script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#MainProductId").change(function () {
            //alert($("#MainProductId").val());            
            CustomSelectRugWithInactiveColour($("#MergingProductId"), '/ProductMergingRug/GetCustomProducts', '/ComboHelpList/SetSingleProducts', ' ', false,0,0, $("#MainProductId").val());
        });


        function CustomSelectRugWithInactiveColour(ElementId, GetAction, SetAction, placehold, IsMultiple, MinLength, filter, MainProductId) {
            var geturl = GetAction;
            //The url we will send our get request to
            var attendeeUrl = GetAction;
            var pageSize = 20;

            ElementId.select2(
            {

                placeholder: placehold,
                //Does the user have to enter any data before sending the ajax request
                minimumInputLength: MinLength,
                allowClear: true,
                multiple: IsMultiple,
                ajax: {

                    //How long the user has to pause their typing before sending the next request
                    quietMillis: 500,
                    //The url of the json service
                    url: attendeeUrl,
                    dataType: 'jsonp',
                    //Our search term and what page we are on
                    data: function (term, page) {
                        return {
                            pageSize: pageSize,
                            pageNum: page,
                            searchTerm: term,
                            filter: filter,
                            MainProductId: MainProductId,
                        };
                    },
                    results: function (data, page) {
                        //Used to determine whether or not there are more results available,
                        //and if requests for more data should be sent in the infinite scrolling
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                },
                initSelection: function (element, callback) {

                    var xval = element.val();
                    if (xval != 0) {
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: SetAction,
                            data: { Ids: element.val() },
                            success: function (data) {
                                callback(data);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert('Failed to Retrive Qty' + thrownError);
                            }
                        })
                    }
                    //callback([{ id: "1", text: "arpit" }, { id: "2", text: "akash" }]);
                }
            });
        }

    })
</script>