@model Model.Models.Narration

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "Narration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
     @Html.HiddenFor(model => model.NarrationId)

    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Narrations</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />
            
            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "Narration", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "Narration", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "Narration", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "Narration", new { id = @Model.NarrationId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "Narration", new { id = @Model.NarrationId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "Narration", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })                    
                </h4>
            </div>
        </div>        
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">
                
                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.DocTypeId, "Document Type", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.DocTypeId, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.DocTypeId, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NarrationName, "Narration", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextAreaFor(m => m.NarrationName, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.NarrationName, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    CustomSelectFunction($("#DocTypeId"), '/ComboHelpList/GetDocumentType', '/ComboHelpList/SetDocumentType', ' ', false, 0);

    var IsSaved=false;
    var ValidationCount=0;

    $('form').submit(function(event){
    
        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            return IsSaved;
        }

    });


    function ValidateData() {        
        var DocId=@Model.NarrationId;
        var TempValue;
        var ValidationMessage="";



        //Checking for dulicate key value
        if(DocId<=0)
        {
            TempValue= $('#NarrationName').DuplicateCheckForCreate({ name: 'Narration', value: $('#NarrationName').val(), doctype: 0 });
            if (TempValue){ ValidationMessage=$('#NarrationName').val() + " already exist <br />";}
        }
        else
        {
            test = $('#NarrationName').DuplicateCheckForEdit({ name: 'Narration', value: $('#NarrationName').val(), doctype: 0,headerId:DocId });
            if (TempValue) {ValidationMessage+=$('#NarrationName').val() + " already exist <br />";}
        }
        if(TempValue)
        {
            if($('#validationerrormsg').length==0){
            $('.panel-info').filter(':last').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
        else
            {
                $('#validationerrormsg').html(ValidationMessage);
        }
        }
        return  (ValidationMessage=="");

    }


</script>

